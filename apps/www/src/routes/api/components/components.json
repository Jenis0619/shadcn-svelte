[
  {
    "component": "accordion",
    "name": "Accordion",
    "dependencies": [
      "radix-svelte"
    ],
    "files": [
      {
        "name": "Accordion.svelte",
        "dir": "src/lib/components/ui/accordion",
        "content": "<script lang=\"ts\">\n  import {\n    Accordion as AccordionPrimitive,\n    type AccordionRootProps\n  } from \"radix-svelte\";\n\n  export let value: any = undefined;\n  export let type: AccordionRootProps[\"type\"] = \"single\";\n  export let disabled: AccordionRootProps[\"disabled\"] = undefined;\n</script>\n\n<AccordionPrimitive.Root bind:value {type} {disabled} {...$$restProps}>\n  <slot />\n</AccordionPrimitive.Root>\n"
      },
      {
        "name": "AccordionContent.svelte",
        "dir": "src/lib/components/ui/accordion",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n  import {\n    Accordion as AccordionPrimitive,\n    type AccordionContentProps\n  } from \"radix-svelte\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n  export let transition: AccordionContentProps[\"transition\"] = true;\n\n  type $$Props = AccordionContentProps;\n</script>\n\n<AccordionPrimitive.Content\n  class={cn(\"overflow-hidden text-sm\", className)}\n  {...$$restProps}\n  {transition}\n>\n  <div class=\"pb-4 pt-0\">\n    <slot />\n  </div>\n</AccordionPrimitive.Content>\n"
      },
      {
        "name": "AccordionItem.svelte",
        "dir": "src/lib/components/ui/accordion",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n  import {\n    Accordion as AccordionPrimitive,\n    type AccordionItemProps\n  } from \"radix-svelte\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n  export let value: AccordionItemProps[\"value\"];\n</script>\n\n<AccordionPrimitive.Item\n  {value}\n  class={cn(\"border-b\", className)}\n  {...$$restProps}\n>\n  <slot />\n</AccordionPrimitive.Item>\n"
      },
      {
        "name": "AccordionTrigger.svelte",
        "dir": "src/lib/components/ui/accordion",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n  import { ChevronDown } from \"lucide-svelte\";\n  import { Accordion as AccordionPrimitive } from \"radix-svelte\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n</script>\n\n<AccordionPrimitive.Header class=\"flex\">\n  <AccordionPrimitive.Trigger\n    class={cn(\n      \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n      className\n    )}\n    {...$$restProps}\n  >\n    <slot />\n    <ChevronDown class=\"h-4 w-4 transition-transform duration-200\" />\n  </AccordionPrimitive.Trigger>\n</AccordionPrimitive.Header>\n"
      },
      {
        "name": "index.ts",
        "dir": "src/lib/components/ui/accordion",
        "content": "import Accordion from \"./Accordion.svelte\";\nimport AccordionContent from \"./AccordionContent.svelte\";\nimport AccordionItem from \"./AccordionItem.svelte\";\nimport AccordionTrigger from \"./AccordionTrigger.svelte\";\n\nexport { Accordion, AccordionContent, AccordionItem, AccordionTrigger };\n"
      }
    ]
  },
  {
    "component": "alert",
    "name": "Alert",
    "files": [
      {
        "name": "Alert.svelte",
        "dir": "src/lib/components/ui/alert",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n  import { type VariantProps, cva } from \"class-variance-authority\";\n\n  const alertVariants = cva(\n    \"relative w-full rounded-lg border p-4 [&>svg]:absolute [&>svg]:text-foreground [&>svg]:left-4 [&>svg]:top-4 [&>svg+div]:translate-y-[-3px] [&:has(svg)]:pl-11\",\n    {\n      variants: {\n        variant: {\n          default: \"bg-background text-foreground\",\n          destructive:\n            \"text-destructive border-destructive/50 dark:border-destructive [&>svg]:text-destructive text-destructive\"\n        }\n      },\n      defaultVariants: {\n        variant: \"default\"\n      }\n    }\n  );\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n  export let variant: VariantProps<typeof alertVariants>[\"variant\"] = \"default\";\n</script>\n\n<div class={cn(alertVariants({ variant }), className)} {...$$restProps}>\n  <slot />\n</div>\n"
      },
      {
        "name": "AlertDescription.svelte",
        "dir": "src/lib/components/ui/alert",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n</script>\n\n<div class={cn(\"text-sm [&_p]:leading-relaxed\", className)} {...$$restProps}>\n  <slot />\n</div>\n"
      },
      {
        "name": "AlertTitle.svelte",
        "dir": "src/lib/components/ui/alert",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n  export let level: \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\" = \"h5\";\n</script>\n\n<svelte:element\n  this={level}\n  class={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n  {...$$restProps}\n>\n  <slot />\n</svelte:element>\n"
      },
      {
        "name": "index.ts",
        "dir": "src/lib/components/ui/alert",
        "content": "import Alert from \"./Alert.svelte\";\nimport AlertDescription from \"./AlertDescription.svelte\";\nimport AlertTitle from \"./AlertTitle.svelte\";\n\nexport { Alert, AlertDescription, AlertTitle };\n"
      }
    ]
  },
  {
    "component": "alert-dialog",
    "name": "Alert Dialog",
    "dependencies": [
      "radix-svelte"
    ],
    "files": [
      {
        "name": "AlertDialogAction.svelte",
        "dir": "src/lib/components/ui/alert-dialog",
        "content": "<script lang=\"ts\">\n  import { buttonVariants } from \"$components/ui/button\";\n  import { cn } from \"$lib/utils\";\n  import { AlertDialog as AlertDialogPrimitive } from \"radix-svelte\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n</script>\n\n<AlertDialogPrimitive.Action\n  class={cn(buttonVariants(), className)}\n  {...$$restProps}\n>\n  <slot />\n</AlertDialogPrimitive.Action>\n"
      },
      {
        "name": "AlertDialogCancel.svelte",
        "dir": "src/lib/components/ui/alert-dialog",
        "content": "<script lang=\"ts\">\n  import { buttonVariants } from \"$components/ui/button\";\n  import { cn } from \"$lib/utils\";\n  import { AlertDialog as AlertDialogPrimitive } from \"radix-svelte\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n</script>\n\n<AlertDialogPrimitive.Cancel\n  class={cn(buttonVariants({ variant: \"outline\" }), \"mt-2 sm:mt-0\", className)}\n  {...$$restProps}\n>\n  <slot />\n</AlertDialogPrimitive.Cancel>\n"
      },
      {
        "name": "AlertDialogContent.svelte",
        "dir": "src/lib/components/ui/alert-dialog",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n  import AlertDialogOverlay from \"./AlertDialogOverlay.svelte\";\n  import AlertDialogPortal from \"./AlertDialogPortal.svelte\";\n  import { AlertDialog as AlertDialogPrimitive } from \"radix-svelte\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n</script>\n\n<AlertDialogPortal>\n  <AlertDialogOverlay />\n  <AlertDialogPrimitive.Content\n    class={cn(\n      \"fixed z-50 grid w-full max-w-lg scale-100 gap-4 border bg-background p-6 opacity-100 shadow-lg animate-in fade-in-90 slide-in-from-bottom-10 sm:rounded-lg sm:zoom-in-90 sm:slide-in-from-bottom-0 md:w-full\",\n      className\n    )}\n    {...$$restProps}\n  >\n    <slot />\n  </AlertDialogPrimitive.Content>\n</AlertDialogPortal>\n"
      },
      {
        "name": "AlertDialogDescription.svelte",
        "dir": "src/lib/components/ui/alert-dialog",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n  import { AlertDialog as AlertDialogPrimitive } from \"radix-svelte\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n</script>\n\n<AlertDialogPrimitive.Description\n  class={cn(\"text-sm text-muted-foreground\", className)}\n  {...$$restProps}\n>\n  <slot />\n</AlertDialogPrimitive.Description>\n"
      },
      {
        "name": "AlertDialogFooter.svelte",
        "dir": "src/lib/components/ui/alert-dialog",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n</script>\n\n<div\n  class={cn(\n    \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n    className\n  )}\n  {...$$restProps}\n>\n  <slot />\n</div>\n"
      },
      {
        "name": "AlertDialogHeader.svelte",
        "dir": "src/lib/components/ui/alert-dialog",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n</script>\n\n<div\n  class={cn(\"flex flex-col space-y-2 text-center sm:text-left\", className)}\n  {...$$restProps}\n>\n  <slot />\n</div>\n"
      },
      {
        "name": "AlertDialogOverlay.svelte",
        "dir": "src/lib/components/ui/alert-dialog",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n  import { AlertDialog as AlertDialogPrimitive } from \"radix-svelte\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n</script>\n\n<AlertDialogPrimitive.Overlay\n  class={cn(\n    \"fixed inset-0 z-50 bg-background/80 backdrop-blur-sm transition-opacity animate-in fade-in\",\n    className\n  )}\n  {...$$restProps}\n/>\n"
      },
      {
        "name": "AlertDialogPortal.svelte",
        "dir": "src/lib/components/ui/alert-dialog",
        "content": "<script lang=\"ts\">\n  import {\n    AlertDialog as AlertDialogPrimitive,\n    type AlertDialogPortalProps\n  } from \"radix-svelte\";\n\n  type $$Props = AlertDialogPortalProps;\n</script>\n\n<AlertDialogPrimitive.Portal {...$$restProps}>\n  <div class=\"fixed inset-0 z-50 flex items-end justify-center sm:items-center\">\n    <slot />\n  </div>\n</AlertDialogPrimitive.Portal>\n"
      },
      {
        "name": "AlertDialogTitle.svelte",
        "dir": "src/lib/components/ui/alert-dialog",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n  import { AlertDialog as AlertDialogPrimitive } from \"radix-svelte\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n</script>\n\n<AlertDialogPrimitive.Title\n  class={cn(\"text-lg font-semibold\", className)}\n  {...$$restProps}\n>\n  <slot />\n</AlertDialogPrimitive.Title>\n"
      },
      {
        "name": "index.ts",
        "dir": "src/lib/components/ui/alert-dialog",
        "content": "import AlertDialogAction from \"./AlertDialogAction.svelte\";\nimport AlertDialogCancel from \"./AlertDialogCancel.svelte\";\nimport AlertDialogContent from \"./AlertDialogContent.svelte\";\nimport AlertDialogDescription from \"./AlertDialogDescription.svelte\";\nimport AlertDialogFooter from \"./AlertDialogFooter.svelte\";\nimport AlertDialogHeader from \"./AlertDialogHeader.svelte\";\nimport AlertDialogTitle from \"./AlertDialogTitle.svelte\";\nimport { AlertDialog as AlertDialogPrimitive } from \"radix-svelte\";\n\nconst AlertDialog = AlertDialogPrimitive.Root;\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger;\n\nexport {\n  AlertDialog,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel\n};\n"
      }
    ]
  },
  {
    "component": "aspect-ratio",
    "name": "Aspect Ratio",
    "dependencies": [
      "radix-svelte"
    ],
    "files": [
      {
        "name": "AspectRatio.svelte",
        "dir": "src/lib/components/ui/aspect-ratio",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n  import { AspectRatio, type AspectRatioProps } from \"radix-svelte\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n  export let ratio: AspectRatioProps[\"ratio\"] = 16 / 9;\n  type $$Props = AspectRatioProps;\n</script>\n\n<AspectRatio.Root {ratio} class={cn(className)} {...$$restProps}>\n  <slot />\n</AspectRatio.Root>\n"
      },
      {
        "name": "index.ts",
        "dir": "src/lib/components/ui/aspect-ratio",
        "content": "import AspectRatio from \"./AspectRatio.svelte\";\n\nexport { AspectRatio };\n"
      }
    ]
  },
  {
    "component": "avatar",
    "name": "Avatar",
    "dependencies": [
      "radix-svelte"
    ],
    "files": [
      {
        "name": "Avatar.svelte",
        "dir": "src/lib/components/ui/avatar",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n  import { Avatar as AvatarPrimitive } from \"radix-svelte\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n</script>\n\n<AvatarPrimitive.Root\n  class={cn(\n    \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n    className\n  )}\n  {...$$restProps}\n>\n  <slot />\n</AvatarPrimitive.Root>\n"
      },
      {
        "name": "AvatarFallback.svelte",
        "dir": "src/lib/components/ui/avatar",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n  import {\n    Avatar as AvatarPrimitive,\n    type AvatarFallbackProps\n  } from \"radix-svelte\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n  export let delayMs: AvatarFallbackProps[\"delayMs\"] = 0;\n</script>\n\n<AvatarPrimitive.Fallback\n  {delayMs}\n  class={cn(\n    \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n    className\n  )}\n  {...$$restProps}\n>\n  <slot />\n</AvatarPrimitive.Fallback>\n"
      },
      {
        "name": "AvatarImage.svelte",
        "dir": "src/lib/components/ui/avatar",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n  import {\n    Avatar as AvatarPrimitive,\n    type AvatarImageProps\n  } from \"radix-svelte\";\n\n  let className: string | undefined | null = undefined;\n  export let src: AvatarImageProps[\"src\"] = undefined;\n  export let alt: AvatarImageProps[\"alt\"] = undefined;\n  export { className as class };\n</script>\n\n<AvatarPrimitive.Image\n  {alt}\n  {src}\n  class={cn(\"aspect-square h-full w-full\", className)}\n  {...$$restProps}\n/>\n"
      },
      {
        "name": "index.ts",
        "dir": "src/lib/components/ui/avatar",
        "content": "import Avatar from \"./Avatar.svelte\";\nimport AvatarFallback from \"./AvatarFallback.svelte\";\nimport AvatarImage from \"./AvatarImage.svelte\";\n\nexport { Avatar, AvatarFallback, AvatarImage };\n"
      }
    ]
  },
  {
    "component": "badge",
    "name": "Badge",
    "files": [
      {
        "name": "Badge.svelte",
        "dir": "src/lib/components/ui/badge",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n  import { type VariantProps, cva } from \"class-variance-authority\";\n  import type { HTMLAnchorAttributes } from \"svelte/elements\";\n\n  const badgeVariants = cva(\n    \"inline-flex items-center border rounded-full px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n    {\n      variants: {\n        variant: {\n          default:\n            \"bg-primary hover:bg-primary/80 border-transparent text-primary-foreground\",\n          secondary:\n            \"bg-secondary hover:bg-secondary/80 border-transparent text-secondary-foreground\",\n          destructive:\n            \"bg-destructive hover:bg-destructive/80 border-transparent text-destructive-foreground\",\n          outline: \"text-foreground\"\n        }\n      },\n      defaultVariants: {\n        variant: \"default\"\n      }\n    }\n  );\n\n  export let href: HTMLAnchorAttributes[\"href\"] = undefined;\n  export let variant: VariantProps<typeof badgeVariants>[\"variant\"] = \"default\";\n  let className: string | undefined | null = undefined;\n  export { className as class };\n</script>\n\n<svelte:element\n  this={href ? \"a\" : \"span\"}\n  {href}\n  class={cn(badgeVariants({ variant, className }))}\n  {...$$restProps}\n>\n  <slot />\n</svelte:element>\n"
      },
      {
        "name": "index.ts",
        "dir": "src/lib/components/ui/badge",
        "content": "import Badge from \"./Badge.svelte\";\nimport { cva } from \"class-variance-authority\";\n\nconst badgeVariants = cva(\n  \"inline-flex items-center border rounded-full px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary hover:bg-primary/80 border-transparent text-primary-foreground\",\n        secondary:\n          \"bg-secondary hover:bg-secondary/80 border-transparent text-secondary-foreground\",\n        destructive:\n          \"bg-destructive hover:bg-destructive/80 border-transparent text-destructive-foreground\",\n        outline: \"text-foreground\"\n      }\n    },\n    defaultVariants: {\n      variant: \"default\"\n    }\n  }\n);\nexport { Badge, badgeVariants };\n"
      }
    ]
  },
  {
    "component": "button",
    "name": "Button",
    "files": [
      {
        "name": "Button.svelte",
        "dir": "src/lib/components/ui/button",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n  import { buttonVariants } from \".\";\n  import type { VariantProps } from \"class-variance-authority\";\n  import type {\n    HTMLAnchorAttributes,\n    HTMLButtonAttributes\n  } from \"svelte/elements\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n  export let href: HTMLAnchorAttributes[\"href\"] = undefined;\n  export let type: HTMLButtonAttributes[\"type\"] = undefined;\n  export let variant: VariantProps<typeof buttonVariants>[\"variant\"] =\n    \"default\";\n  export let size: VariantProps<typeof buttonVariants>[\"size\"] = \"default\";\n</script>\n\n<svelte:element\n  this={href ? \"a\" : \"button\"}\n  type={href ? undefined : type}\n  {href}\n  class={cn(buttonVariants({ variant, size, className }))}\n  {...$$restProps}\n  on:click\n  on:change\n  on:keydown\n  on:keyup\n  on:mouseenter\n  on:mouseleave\n>\n  <slot />\n</svelte:element>\n"
      },
      {
        "name": "index.ts",
        "dir": "src/lib/components/ui/button",
        "content": "import Button from \"./Button.svelte\";\nimport { cva } from \"class-variance-authority\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none ring-offset-background\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"underline-offset-4 hover:underline text-primary\"\n      },\n      size: {\n        default: \"h-10 py-2 px-4\",\n        sm: \"h-9 px-3 rounded-md\",\n        lg: \"h-11 px-8 rounded-md\"\n      }\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\"\n    }\n  }\n);\n\nexport { Button, buttonVariants };\n"
      }
    ]
  },
  {
    "component": "card",
    "name": "Card",
    "files": [
      {
        "name": "Card.svelte",
        "dir": "src/lib/components/ui/card",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n</script>\n\n<div\n  class={cn(\n    \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n    className\n  )}\n  {...$$restProps}\n  on:click\n  on:focusin\n  on:focusout\n  on:mouseenter\n  on:mouseleave\n>\n  <slot />\n</div>\n"
      },
      {
        "name": "CardContent.svelte",
        "dir": "src/lib/components/ui/card",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n</script>\n\n<div class={cn(\"p-6 pt-0\", className)} {...$$restProps}>\n  <slot />\n</div>\n"
      },
      {
        "name": "CardDescription.svelte",
        "dir": "src/lib/components/ui/card",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n</script>\n\n<p class={cn(\"text-sm text-muted-foreground\", className)} {...$$restProps}>\n  <slot />\n</p>\n"
      },
      {
        "name": "CardFooter.svelte",
        "dir": "src/lib/components/ui/card",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n</script>\n\n<div class={cn(\"flex items-center p-6 pt-0\", className)} {...$$restProps}>\n  <slot />\n</div>\n"
      },
      {
        "name": "CardHeader.svelte",
        "dir": "src/lib/components/ui/card",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n</script>\n\n<div class={cn(\"flex flex-col space-y-1.5 p-6\", className)} {...$$restProps}>\n  <slot />\n</div>\n"
      },
      {
        "name": "CardTitle.svelte",
        "dir": "src/lib/components/ui/card",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n\n  export let tag: \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\" = \"h3\";\n</script>\n\n<svelte:element\n  this={tag}\n  class={cn(\"text-lg font-semibold leading-none tracking-tight\", className)}\n  {...$$restProps}\n>\n  <slot />\n</svelte:element>\n"
      },
      {
        "name": "index.ts",
        "dir": "src/lib/components/ui/card",
        "content": "import Card from \"./Card.svelte\";\nimport CardContent from \"./CardContent.svelte\";\nimport CardDescription from \"./CardDescription.svelte\";\nimport CardFooter from \"./CardFooter.svelte\";\nimport CardHeader from \"./CardHeader.svelte\";\nimport CardTitle from \"./CardTitle.svelte\";\n\nexport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle\n};\n"
      }
    ]
  },
  {
    "component": "checkbox",
    "name": "Checkbox",
    "dependencies": [
      "radix-svelte"
    ],
    "files": [
      {
        "name": "Checkbox.svelte",
        "dir": "src/lib/components/ui/checkbox",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n  import { Check } from \"lucide-svelte\";\n  import {\n    Checkbox as CheckboxPrimitive,\n    type CheckboxRootProps\n  } from \"radix-svelte\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n  export let checked: CheckboxRootProps[\"checked\"] = undefined;\n  type $$Props = CheckboxRootProps;\n</script>\n\n<CheckboxPrimitive.Root\n  class={cn(\n    \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n    className\n  )}\n  bind:checked\n  {...$$restProps}\n>\n  <CheckboxPrimitive.Indicator\n    class={cn(\"flex items-center justify-center text-current\")}\n  >\n    <Check class=\"h-4 w-4\" />\n  </CheckboxPrimitive.Indicator>\n</CheckboxPrimitive.Root>\n"
      },
      {
        "name": "index.ts",
        "dir": "src/lib/components/ui/checkbox",
        "content": "import Checkbox from \"./Checkbox.svelte\";\n\nexport { Checkbox };\n"
      }
    ]
  },
  {
    "component": "collapsible",
    "name": "Collapsible",
    "dependencies": [
      "radix-svelte"
    ],
    "files": [
      {
        "name": "index.ts",
        "dir": "src/lib/components/ui/collapsible",
        "content": "import { Collapsible as CollapsiblePrimitive } from \"radix-svelte\";\n\nconst Collapsible = CollapsiblePrimitive.Root;\n\nconst CollapsibleTrigger = CollapsiblePrimitive.Trigger;\n\nconst CollapsibleContent = CollapsiblePrimitive.Content;\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent };\n"
      }
    ]
  },
  {
    "component": "dialog",
    "name": "Dialog",
    "dependencies": [
      "radix-svelte"
    ],
    "files": [
      {
        "name": "DialogContent.svelte",
        "dir": "src/lib/components/ui/dialog",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n  import DialogOverlay from \"./DialogOverlay.svelte\";\n  import DialogPortal from \"./DialogPortal.svelte\";\n  import { X } from \"lucide-svelte\";\n  import {\n    Dialog as DialogPrimitive,\n    type DialogContentProps\n  } from \"radix-svelte\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n  type $$Props = DialogContentProps;\n</script>\n\n<DialogPortal>\n  <DialogOverlay />\n  <DialogPrimitive.Content\n    class={cn(\n      \"fixed z-50 grid w-full gap-4 rounded-b-lg border bg-background p-6 shadow-lg animate-in data-[state=open]:fade-in-90 data-[state=open]:slide-in-from-bottom-10 sm:max-w-lg sm:rounded-lg sm:zoom-in-90 data-[state=open]:sm:slide-in-from-bottom-0\",\n      className\n    )}\n    {...$$restProps}\n  >\n    <slot />\n    <DialogPrimitive.Close\n      class=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\"\n    >\n      <X className=\"h-4 w-4\" />\n      <span class=\"sr-only\">Close</span>\n    </DialogPrimitive.Close>\n  </DialogPrimitive.Content>\n</DialogPortal>\n"
      },
      {
        "name": "DialogDescription.svelte",
        "dir": "src/lib/components/ui/dialog",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n  import { Dialog as DialogPrimitive } from \"radix-svelte\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n</script>\n\n<DialogPrimitive.Description\n  class={cn(\"text-sm text-muted-foreground\", className)}\n  {...$$restProps}\n>\n  <slot />\n</DialogPrimitive.Description>\n"
      },
      {
        "name": "DialogFooter.svelte",
        "dir": "src/lib/components/ui/dialog",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n</script>\n\n<div\n  class={cn(\n    \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n    className\n  )}\n  {...$$restProps}\n>\n  <slot />\n</div>\n"
      },
      {
        "name": "DialogHeader.svelte",
        "dir": "src/lib/components/ui/dialog",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n</script>\n\n<div\n  class={cn(\"flex flex-col space-y-1.5 text-center sm:text-left\", className)}\n  {...$$restProps}\n>\n  <slot />\n</div>\n"
      },
      {
        "name": "DialogOverlay.svelte",
        "dir": "src/lib/components/ui/dialog",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n  import { Dialog as DialogPrimitive } from \"radix-svelte\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n</script>\n\n<DialogPrimitive.Overlay\n  class={cn(\n    \"fixed inset-0 z-50 bg-background/80 backdrop-blur-sm transition-all duration-100 data-[state=closed]:animate-out data-[state=closed]:fade-out data-[state=open]:fade-in\",\n    className\n  )}\n  {...$$restProps}\n/>\n"
      },
      {
        "name": "DialogPortal.svelte",
        "dir": "src/lib/components/ui/dialog",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n  import {\n    Dialog as DialogPrimitive,\n    type DialogPortalProps\n  } from \"radix-svelte\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n\n  type $$Props = DialogPortalProps & {\n    class?: string;\n  };\n</script>\n\n<DialogPrimitive.Portal class={cn(className)} {...$$restProps}>\n  <div\n    class=\"fixed inset-0 z-50 flex items-start justify-center sm:items-center\"\n  >\n    <slot />\n  </div>\n</DialogPrimitive.Portal>\n"
      },
      {
        "name": "DialogTitle.svelte",
        "dir": "src/lib/components/ui/dialog",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n  import { Dialog as DialogPrimitive } from \"radix-svelte\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n</script>\n\n<DialogPrimitive.Title\n  class={cn(\"text-lg font-semibold leading-none tracking-tight\", className)}\n  {...$$restProps}\n>\n  <slot />\n</DialogPrimitive.Title>\n"
      },
      {
        "name": "index.ts",
        "dir": "src/lib/components/ui/dialog",
        "content": "import DialogContent from \"./DialogContent.svelte\";\nimport DialogDescription from \"./DialogDescription.svelte\";\nimport DialogFooter from \"./DialogFooter.svelte\";\nimport DialogHeader from \"./DialogHeader.svelte\";\nimport DialogOverlay from \"./DialogOverlay.svelte\";\nimport DialogPortal from \"./DialogPortal.svelte\";\nimport DialogTitle from \"./DialogTitle.svelte\";\nimport { Dialog as DialogPrimitive } from \"radix-svelte\";\n\nconst Dialog = DialogPrimitive.Root;\nconst DialogTrigger = DialogPrimitive.Trigger;\n\nexport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger\n};\n"
      }
    ]
  },
  {
    "component": "hover-card",
    "name": "Hover Card",
    "dependencies": [
      "radix-svelte"
    ],
    "files": [
      {
        "name": "HoverCardContent.svelte",
        "dir": "src/lib/components/ui/hover-card",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n  import { HoverCard as HoverCardPrimitive } from \"radix-svelte\";\n  import type {\n    HoverCardContentProps,\n    HoverCardPortalProps\n  } from \"radix-svelte\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n  export let align: HoverCardContentProps[\"align\"] = undefined;\n  export let sideOffset: HoverCardContentProps[\"sideOffset\"] = undefined;\n  export let container: HoverCardPortalProps[\"container\"] = undefined;\n\n  type $$Props = HoverCardContentProps & {\n    container?: HoverCardPortalProps[\"container\"];\n  };\n</script>\n\n<HoverCardPrimitive.Portal {container}>\n  <HoverCardPrimitive.Content\n    {align}\n    {sideOffset}\n    class={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none animate-in zoom-in-90\",\n      className\n    )}\n    {...$$restProps}\n  >\n    <slot />\n  </HoverCardPrimitive.Content>\n</HoverCardPrimitive.Portal>\n"
      },
      {
        "name": "index.ts",
        "dir": "src/lib/components/ui/hover-card",
        "content": "import HoverCardContent from \"./HoverCardContent.svelte\";\nimport { HoverCard as HoverCardPrimitive } from \"radix-svelte\";\n\nconst HoverCard = HoverCardPrimitive.Root;\nconst HoverCardTrigger = HoverCardPrimitive.Trigger;\nconst HoverCardPortal = HoverCardPrimitive.Portal;\n\nexport { HoverCard, HoverCardContent, HoverCardPortal, HoverCardTrigger };\n"
      }
    ]
  },
  {
    "component": "input",
    "name": "Input",
    "files": [
      {
        "name": "Input.svelte",
        "dir": "src/lib/components/ui/input",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n  import type { HTMLInputAttributes } from \"svelte/elements\";\n\n  // 2-way binding for type\n  function setType(node: HTMLInputElement, _type: HTMLInputAttributes[\"type\"]) {\n    if (_type) {\n      node.type = _type;\n      return {\n        update(_type: string) {\n          node.type = _type;\n        }\n      };\n    }\n  }\n\n  let className: string | undefined | null = undefined;\n\n  export let type: HTMLInputAttributes[\"type\"] = \"text\";\n  export let value: HTMLInputAttributes[\"value\"] = undefined;\n  export { className as class };\n\n  type $$Props = HTMLInputAttributes;\n</script>\n\n<input\n  class={cn(\n    \"flex h-10 w-full rounded-md border border-input bg-transparent px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n    className\n  )}\n  bind:value\n  on:blur\n  on:change\n  on:click\n  on:focus\n  on:keydown\n  on:keypress\n  on:keyup\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n  on:paste\n  on:input\n  use:setType={type}\n  {...$$restProps}\n/>\n"
      },
      {
        "name": "index.ts",
        "dir": "src/lib/components/ui/input",
        "content": "import Input from \"./Input.svelte\";\n\nexport { Input };\n"
      }
    ]
  },
  {
    "component": "label",
    "name": "Label",
    "dependencies": [
      "radix-svelte"
    ],
    "files": [
      {
        "name": "Label.svelte",
        "dir": "src/lib/components/ui/label",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n  import { cva } from \"class-variance-authority\";\n  import { Label as LabelPrimitive } from \"radix-svelte\";\n\n  const labelVariants = cva(\n    \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n  );\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n</script>\n\n<LabelPrimitive.Root class={cn(labelVariants(), className)} {...$$restProps}>\n  <slot />\n</LabelPrimitive.Root>\n"
      },
      {
        "name": "index.ts",
        "dir": "src/lib/components/ui/label",
        "content": "import Label from \"./Label.svelte\";\n\nexport { Label };\n"
      }
    ]
  },
  {
    "component": "progress",
    "name": "Progress",
    "dependencies": [
      "radix-svelte"
    ],
    "files": [
      {
        "name": "Progress.svelte",
        "dir": "src/lib/components/ui/progress",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n  import { Progress as ProgressPrimitive } from \"radix-svelte\";\n  import type { ProgressRootProps } from \"radix-svelte\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n  export let value: ProgressRootProps[\"value\"] = null;\n  export let max: ProgressRootProps[\"max\"] = 100;\n\n  type $$Props = ProgressRootProps;\n</script>\n\n<ProgressPrimitive.Root\n  class={cn(\n    \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n    className\n  )}\n  {value}\n  {max}\n  {...$$restProps}\n>\n  <ProgressPrimitive.Indicator\n    class=\"h-full w-full flex-1 bg-primary transition-all\"\n    style={`transform: translateX(-${\n      100 - (100 * (value ?? 0)) / (max ?? 1)\n    }%)`}\n  />\n</ProgressPrimitive.Root>\n"
      },
      {
        "name": "index.ts",
        "dir": "src/lib/components/ui/progress",
        "content": "import Progress from \"./Progress.svelte\";\n\nexport { Progress };\n"
      }
    ]
  },
  {
    "component": "radio-group",
    "name": "Radio Group",
    "dependencies": [
      "radix-svelte"
    ],
    "files": [
      {
        "name": "RadioGroup.svelte",
        "dir": "src/lib/components/ui/radio-group",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n  import {\n    RadioGroup as RadioGroupPrimitive,\n    type RadioGroupRootProps\n  } from \"radix-svelte\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n  export let value: RadioGroupRootProps[\"value\"] = undefined;\n  type $$Props = RadioGroupRootProps;\n</script>\n\n<RadioGroupPrimitive.Root\n  bind:value\n  class={cn(\"grid gap-2\", className)}\n  {...$$restProps}\n>\n  <slot />\n</RadioGroupPrimitive.Root>\n"
      },
      {
        "name": "RadioGroupItem.svelte",
        "dir": "src/lib/components/ui/radio-group",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n  import { Circle } from \"lucide-svelte\";\n  import { RadioGroup as RadioGroupPrimitive } from \"radix-svelte\";\n  import type { RadioGroupItemProps } from \"radix-svelte\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n  export let value: RadioGroupItemProps[\"value\"] = \"\";\n  type $$Props = RadioGroupItemProps;\n</script>\n\n<RadioGroupPrimitive.Item\n  {value}\n  class={cn(\n    \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n    className\n  )}\n  {...$$restProps}\n>\n  <RadioGroupPrimitive.Indicator class=\"flex items-center justify-center\">\n    <Circle class=\"h-2.5 w-2.5 fill-current text-current\" />\n  </RadioGroupPrimitive.Indicator>\n</RadioGroupPrimitive.Item>\n"
      },
      {
        "name": "index.ts",
        "dir": "src/lib/components/ui/radio-group",
        "content": "import RadioGroup from \"./RadioGroup.svelte\";\nimport RadioGroupItem from \"./RadioGroupItem.svelte\";\n\nexport { RadioGroup, RadioGroupItem };\n"
      }
    ]
  },
  {
    "component": "separator",
    "name": "Separator",
    "dependencies": [
      "radix-svelte"
    ],
    "files": [
      {
        "name": "Separator.svelte",
        "dir": "src/lib/components/ui/separator",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n  import { Separator, type SeparatorRootProps } from \"radix-svelte\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n\n  export let orientation: SeparatorRootProps[\"orientation\"] = \"horizontal\";\n  export let decorative: SeparatorRootProps[\"decorative\"] = true;\n</script>\n\n<Separator.Root\n  {orientation}\n  {decorative}\n  class={cn(\n    \"shrink-0 bg-border\",\n    orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n    className\n  )}\n  {...$$restProps}\n/>\n"
      },
      {
        "name": "index.ts",
        "dir": "src/lib/components/ui/separator",
        "content": "import Separator from \"./Separator.svelte\";\n\nexport { Separator };\n"
      }
    ]
  },
  {
    "component": "skeleton",
    "name": "Skeleton",
    "files": [
      {
        "name": "Skeleton.svelte",
        "dir": "src/lib/components/ui/skeleton",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n  import type { HTMLAttributes } from \"svelte/elements\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n  type $$Props = HTMLAttributes<HTMLDivElement>;\n</script>\n\n<div\n  class={cn(\"animate-pulse rounded-md bg-muted\", className)}\n  {...$$restProps}\n/>\n"
      },
      {
        "name": "index.ts",
        "dir": "src/lib/components/ui/skeleton",
        "content": "import Skeleton from \"./Skeleton.svelte\";\n\nexport { Skeleton };\n"
      }
    ]
  },
  {
    "component": "slider",
    "name": "Slider",
    "dependencies": [
      "radix-svelte"
    ],
    "files": [
      {
        "name": "Slider.svelte",
        "dir": "src/lib/components/ui/slider",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n  import { Slider as SliderPrimitive } from \"radix-svelte\";\n  import type { SliderRootProps } from \"radix-svelte\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n  export let value: SliderRootProps[\"value\"] = 0;\n\n  type $$Props = SliderRootProps;\n</script>\n\n<SliderPrimitive.Root\n  bind:value\n  class={cn(\n    \"relative flex w-full touch-none select-none items-center\",\n    className\n  )}\n  {...$$restProps}\n>\n  <SliderPrimitive.Track\n    class=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\"\n  >\n    <SliderPrimitive.Range class=\"absolute h-full bg-primary\" />\n  </SliderPrimitive.Track>\n  <SliderPrimitive.Thumb\n    class=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\"\n  />\n</SliderPrimitive.Root>\n"
      },
      {
        "name": "index.ts",
        "dir": "src/lib/components/ui/slider",
        "content": "import Slider from \"./Slider.svelte\";\n\nexport { Slider };\n"
      }
    ]
  },
  {
    "component": "switch",
    "name": "Switch",
    "dependencies": [
      "radix-svelte"
    ],
    "files": [
      {
        "name": "Switch.svelte",
        "dir": "src/lib/components/ui/switch",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n  import { Switch, type SwitchRootProps } from \"radix-svelte\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n  export let rootChecked: SwitchRootProps[\"checked\"] = undefined;\n  export let rootRequired: SwitchRootProps[\"required\"] = undefined;\n  export let rootDisabled: SwitchRootProps[\"disabled\"] = undefined;\n  export let rootName: SwitchRootProps[\"name\"] = undefined;\n  export let rootValue: SwitchRootProps[\"value\"] = undefined;\n</script>\n\n<Switch.Root\n  class={cn(\n    \"peer inline-flex h-[24px] w-[44px] shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n    className\n  )}\n  {...$$restProps}\n  bind:checked={rootChecked}\n  bind:required={rootRequired}\n  bind:disabled={rootDisabled}\n  bind:name={rootName}\n  bind:value={rootValue}\n>\n  <Switch.Thumb\n    class={cn(\n      \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n    )}\n  />\n</Switch.Root>\n"
      },
      {
        "name": "index.ts",
        "dir": "src/lib/components/ui/switch",
        "content": "import Switch from \"./Switch.svelte\";\n\nexport { Switch };\n"
      }
    ]
  },
  {
    "component": "table",
    "name": "Table",
    "files": [
      {
        "name": "Table.svelte",
        "dir": "src/lib/components/ui/table",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n</script>\n\n<div class=\"w-full overflow-auto\">\n  <table\n    class={cn(\"w-full caption-bottom text-sm\", className)}\n    {...$$restProps}\n  >\n    <slot />\n  </table>\n</div>\n"
      },
      {
        "name": "TableBody.svelte",
        "dir": "src/lib/components/ui/table",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n</script>\n\n<tbody class={cn(\"[&_tr:last-child]:border-0\", className)} {...$$restProps}>\n  <slot />\n</tbody>\n"
      },
      {
        "name": "TableCaption.svelte",
        "dir": "src/lib/components/ui/table",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n</script>\n\n<caption\n  class={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n  {...$$restProps}\n>\n  <slot />\n</caption>\n"
      },
      {
        "name": "TableCell.svelte",
        "dir": "src/lib/components/ui/table",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n</script>\n\n<td\n  class={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n  {...$$restProps}\n>\n  <slot />\n</td>\n"
      },
      {
        "name": "TableFooter.svelte",
        "dir": "src/lib/components/ui/table",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n</script>\n\n<tfoot\n  class={cn(\"bg-primary font-medium text-primary-foreground\", className)}\n  {...$$restProps}\n>\n  <slot />\n</tfoot>\n"
      },
      {
        "name": "TableHead.svelte",
        "dir": "src/lib/components/ui/table",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n</script>\n\n<th\n  class={cn(\n    \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n    className\n  )}\n  {...$$restProps}\n>\n  <slot />\n</th>\n"
      },
      {
        "name": "TableHeader.svelte",
        "dir": "src/lib/components/ui/table",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n</script>\n\n<thead class={cn(\"[&_tr]:border-b\", className)} {...$$restProps}>\n  <slot />\n</thead>\n"
      },
      {
        "name": "TableRow.svelte",
        "dir": "src/lib/components/ui/table",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n</script>\n\n<tr\n  class={cn(\n    \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n    className\n  )}\n  {...$$restProps}\n>\n  <slot />\n</tr>\n"
      },
      {
        "name": "index.ts",
        "dir": "src/lib/components/ui/table",
        "content": "import Table from \"./Table.svelte\";\nimport TableBody from \"./TableBody.svelte\";\nimport TableCaption from \"./TableCaption.svelte\";\nimport TableCell from \"./TableCell.svelte\";\nimport TableFooter from \"./TableFooter.svelte\";\nimport TableHead from \"./TableHead.svelte\";\nimport TableHeader from \"./TableHeader.svelte\";\nimport TableRow from \"./TableRow.svelte\";\n\nexport {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableHeader,\n  TableRow\n};\n"
      }
    ]
  },
  {
    "component": "tabs",
    "name": "Tabs",
    "dependencies": [
      "radix-svelte"
    ],
    "files": [
      {
        "name": "TabsContent.svelte",
        "dir": "src/lib/components/ui/tabs",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n  import { Tabs as TabsPrimitive, type TabsContentProps } from \"radix-svelte\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n  export let value: TabsContentProps[\"value\"];\n  type $$Props = TabsContentProps;\n</script>\n\n<TabsPrimitive.Content\n  class={cn(\n    \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n    className\n  )}\n  {value}\n  {...$$restProps}\n>\n  <slot />\n</TabsPrimitive.Content>\n"
      },
      {
        "name": "TabsList.svelte",
        "dir": "src/lib/components/ui/tabs",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n  import { Tabs as TabsPrimitive } from \"radix-svelte\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n</script>\n\n<TabsPrimitive.List\n  class={cn(\n    \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n    className\n  )}\n  {...$$restProps}\n>\n  <slot />\n</TabsPrimitive.List>\n"
      },
      {
        "name": "TabsTrigger.svelte",
        "dir": "src/lib/components/ui/tabs",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n  import { Tabs as TabsPrimitive, type TabsTriggerProps } from \"radix-svelte\";\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n  export let value: TabsTriggerProps[\"value\"];\n  type $$Props = TabsTriggerProps;\n</script>\n\n<TabsPrimitive.Trigger\n  class={cn(\n    \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n    className\n  )}\n  {value}\n  {...$$restProps}\n>\n  <slot />\n</TabsPrimitive.Trigger>\n"
      },
      {
        "name": "index.ts",
        "dir": "src/lib/components/ui/tabs",
        "content": "import TabsContent from \"./TabsContent.svelte\";\nimport TabsList from \"./TabsList.svelte\";\nimport TabsTrigger from \"./TabsTrigger.svelte\";\nimport { Tabs as TabsPrimitive } from \"radix-svelte\";\n\nconst Tabs = TabsPrimitive.Root;\n\nexport { Tabs, TabsContent, TabsList, TabsTrigger };\n"
      }
    ]
  },
  {
    "component": "textarea",
    "name": "Textarea",
    "files": [
      {
        "name": "Textarea.svelte",
        "dir": "src/lib/components/ui/textarea",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n  import type { HTMLTextareaAttributes } from \"svelte/elements\";\n\n  let className: string | undefined | null = undefined;\n\n  export let value: HTMLTextareaAttributes[\"value\"] = undefined;\n  export { className as class };\n\n  type $$Props = HTMLTextareaAttributes;\n</script>\n\n<textarea\n  class={cn(\n    \"flex h-20 w-full rounded-md border border-input bg-transparent px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n    className\n  )}\n  bind:value\n  on:blur\n  on:change\n  on:click\n  on:focus\n  on:keydown\n  on:keypress\n  on:keyup\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n  on:paste\n  on:input\n  {...$$restProps}\n/>\n"
      },
      {
        "name": "index.ts",
        "dir": "src/lib/components/ui/textarea",
        "content": "import Textarea from \"./Textarea.svelte\";\n\nexport { Textarea };\n"
      }
    ]
  },
  {
    "component": "toggle",
    "name": "Toggle",
    "dependencies": [
      "radix-svelte"
    ],
    "files": [
      {
        "name": "Toggle.svelte",
        "dir": "src/lib/components/ui/toggle",
        "content": "<script lang=\"ts\">\n  import { cn } from \"$lib/utils\";\n  import { type VariantProps, cva } from \"class-variance-authority\";\n  import {\n    Toggle as TogglePrimitive,\n    type ToggleRootProps\n  } from \"radix-svelte\";\n\n  const toggleVariants = cva(\n    \"inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors data-[state=on]:bg-accent data-[state=on]:text-accent-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 ring-offset-background hover:bg-muted hover:text-muted-foreground\",\n    {\n      variants: {\n        variant: {\n          default: \"bg-transparent\",\n          outline:\n            \"bg-transparent border border-input hover:bg-accent hover:text-accent-foreground\"\n        },\n        size: {\n          default: \"h-10 px-3\",\n          sm: \"h-9 px-2.5\",\n          lg: \"h-11 px-5\"\n        }\n      },\n      defaultVariants: {\n        variant: \"default\",\n        size: \"default\"\n      }\n    }\n  );\n\n  let className: string | undefined | null = undefined;\n  export { className as class };\n  export let variant: VariantProps<typeof toggleVariants>[\"variant\"] =\n    \"default\";\n  export let size: VariantProps<typeof toggleVariants>[\"size\"] = \"default\";\n  export let pressed: boolean = false;\n  export let disabled: boolean = false;\n\n  type $$Props = ToggleRootProps & {\n    size?: VariantProps<typeof toggleVariants>[\"size\"];\n    variant?: VariantProps<typeof toggleVariants>[\"variant\"];\n  };\n</script>\n\n<TogglePrimitive.Root\n  class={cn(toggleVariants({ variant, size, className }))}\n  bind:pressed\n  bind:disabled\n  {...$$restProps}\n>\n  <slot />\n</TogglePrimitive.Root>\n"
      },
      {
        "name": "index.ts",
        "dir": "src/lib/components/ui/toggle",
        "content": "import Toggle from \"./Toggle.svelte\";\n\nexport { Toggle };\n"
      }
    ]
  }
]